{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbbb7dbf3a9382ec82125400b570ea2d932353515a573843cee262c389e15211b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "970510",
    "logsBloom": "0x
    "blockHash": "0x0efcc3de3fd625795324d7497e7299851a78e4b157f129225634ccfea63d35dd",
    "transactionHash": "0xbbb7dbf3a9382ec82125400b570ea2d932353515a573843cee262c389e15211b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "970510",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "9693a31c2d73f0b0f30e9d730f080fe2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sebasti\\u00e1n Zeled\\u00f3n\",\"details\":\"This implements price feeds as our Library \",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our Library \"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this conrtract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24; //4:53\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Sebasti\\u00e1n Zeled\\u00f3n\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our Library \\n */\\ncontract FundMe {\\n    //Type declarations\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    //State Variables \\n    address[] public s_funders;\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address public immutable i_owner;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    //\\n    modifier onlyOwner {\\n        //require(msg.sender == i_owner, \\\"Sender is not owner\\\");\\n        if(msg.sender != i_owner) {revert FundMe__NotOwner();}\\n        _;\\n    }\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    /**\\n    * @notice This function funds this conrtract\\n    * @dev This implements price feeds as our Library \\n    */\\n    function fund() public payable{\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"Didn't sent enough!\\\");\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner{\\n        //require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        /* For Syntax: starting index, ending index, step amount */\\n        for(uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        s_funders = new address[](0);\\n        //withdraw the funds\\n        //call (recommended)\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed.\\\");\\n\\n    }\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner{\\n        address[] memory funders = s_funders;\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{ value : address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n}\",\"keccak256\":\"0xab4028d64761ec0439a6e1c25ea2e49fc6ccb99a5fd207d866cfb8cbe91ab76a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.24; //10:10\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        (,int256 answer,,,) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // 3000.00000000\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getVersion() internal view returns (uint256) {\\n\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\n        return priceFeed.version();\\n        \\n    }\\n\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n\\n    }\\n\\n}\",\"keccak256\":\"0xfb2b2c7e0e5412539500b7d68f1f65ebcb3636a2afb415bbbd2b71ffa9930ea3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011ae380380620011ae83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161102e620001806000396000818161021c01528181610607015281816107f7015261088f015261102e6000f3fe6080604052600436106100865760003560e01c80636b69a592116100595780636b69a592146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a7578063dba6335f146101b157610086565b80630ec3b0271461008b5780631bf6132d146100b65780633ccfd60b146100f357806354861af71461010a575b600080fd5b34801561009757600080fd5b506100a06101dc565b6040516100ad9190610aa4565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610b02565b610202565b6040516100ea9190610b48565b60405180910390f35b3480156100ff57600080fd5b5061010861021a565b005b34801561011657600080fd5b50610131600480360381019061012c9190610b8f565b610454565b60405161013e9190610bcb565b60405180910390f35b34801561015357600080fd5b5061015c610493565b6040516101699190610b48565b60405180910390f35b34801561017e57600080fd5b506101876104a0565b6040516101949190610aa4565b60405180910390f35b6101a56104ca565b005b6101af610605565b005b3480156101bd57600080fd5b506101c661088d565b6040516101d39190610bcb565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103445760008082815481106102c4576102c3610be6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506102a2565b50600067ffffffffffffffff8111156103605761035f610c15565b5b60405190808252806020026020018201604052801561038e5781602001602082028036833780820191505090505b50600090805190602001906103a492919061097e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103cb90610c75565b60006040518083038185875af1925050503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b5050905080610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044890610ce7565b60405180910390fd5b50565b6000818154811061046457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610509600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b190919063ffffffff16565b101561054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610d53565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fc9190610da2565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561070d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c3575b5050505050905060005b815181101561079257600082828151811061073557610734610be6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610717565b50600067ffffffffffffffff8111156107ae576107ad610c15565b5b6040519080825280602002602001820160405280156107dc5781602001602082028036833780820191505090505b50600090805190602001906107f292919061097e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083990610c75565b60006040518083038185875af1925050503d8060008114610876576040519150601f19603f3d011682016040523d82523d6000602084013e61087b565b606091505b505090508061088957600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108bd836108ed565b90506000670de0b6b3a764000085836108d69190610dd6565b6108e09190610e47565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610f05565b5050509150506402540be400816109769190610f80565b915050919050565b8280548282559060005260206000209081019282156109f7579160200282015b828111156109f65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099e565b5b509050610a049190610a08565b5090565b5b80821115610a21576000816000905550600101610a09565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a6a610a65610a6084610a25565b610a45565b610a25565b9050919050565b6000610a7c82610a4f565b9050919050565b6000610a8e82610a71565b9050919050565b610a9e81610a83565b82525050565b6000602082019050610ab96000830184610a95565b92915050565b600080fd5b6000610acf82610a25565b9050919050565b610adf81610ac4565b8114610aea57600080fd5b50565b600081359050610afc81610ad6565b92915050565b600060208284031215610b1857610b17610abf565b5b6000610b2684828501610aed565b91505092915050565b6000819050919050565b610b4281610b2f565b82525050565b6000602082019050610b5d6000830184610b39565b92915050565b610b6c81610b2f565b8114610b7757600080fd5b50565b600081359050610b8981610b63565b92915050565b600060208284031215610ba557610ba4610abf565b5b6000610bb384828501610b7a565b91505092915050565b610bc581610ac4565b82525050565b6000602082019050610be06000830184610bbc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c5f600083610c44565b9150610c6a82610c4f565b600082019050919050565b6000610c8082610c52565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c65642e0000000000000000000000000000000000000000600082015250565b6000610cd1600c83610c8a565b9150610cdc82610c9b565b602082019050919050565b60006020820190508181036000830152610d0081610cc4565b9050919050565b7f4469646e27742073656e7420656e6f7567682100000000000000000000000000600082015250565b6000610d3d601383610c8a565b9150610d4882610d07565b602082019050919050565b60006020820190508181036000830152610d6c81610d30565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dad82610b2f565b9150610db883610b2f565b9250828201905080821115610dd057610dcf610d73565b5b92915050565b6000610de182610b2f565b9150610dec83610b2f565b9250828202610dfa81610b2f565b91508282048414831517610e1157610e10610d73565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5282610b2f565b9150610e5d83610b2f565b925082610e6d57610e6c610e18565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9781610e78565b8114610ea257600080fd5b50565b600081519050610eb481610e8e565b92915050565b6000819050919050565b610ecd81610eba565b8114610ed857600080fd5b50565b600081519050610eea81610ec4565b92915050565b600081519050610eff81610b63565b92915050565b600080600080600060a08688031215610f2157610f20610abf565b5b6000610f2f88828901610ea5565b9550506020610f4088828901610edb565b9450506040610f5188828901610ef0565b9350506060610f6288828901610ef0565b9250506080610f7388828901610ea5565b9150509295509295909350565b6000610f8b82610eba565b9150610f9683610eba565b9250828202610fa481610eba565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fdc57610fdb610d73565b5b8282058414831517610ff157610ff0610d73565b5b509291505056fea26469706673582212200143270f69112215db4298ae25360c3a61db8d7b8bdef26831fa58bde2fbfa4e64736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c80636b69a592116100595780636b69a592146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a7578063dba6335f146101b157610086565b80630ec3b0271461008b5780631bf6132d146100b65780633ccfd60b146100f357806354861af71461010a575b600080fd5b34801561009757600080fd5b506100a06101dc565b6040516100ad9190610aa4565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d89190610b02565b610202565b6040516100ea9190610b48565b60405180910390f35b3480156100ff57600080fd5b5061010861021a565b005b34801561011657600080fd5b50610131600480360381019061012c9190610b8f565b610454565b60405161013e9190610bcb565b60405180910390f35b34801561015357600080fd5b5061015c610493565b6040516101699190610b48565b60405180910390f35b34801561017e57600080fd5b506101876104a0565b6040516101949190610aa4565b60405180910390f35b6101a56104ca565b005b6101af610605565b005b3480156101bd57600080fd5b506101c661088d565b6040516101d39190610bcb565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156103445760008082815481106102c4576102c3610be6565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506102a2565b50600067ffffffffffffffff8111156103605761035f610c15565b5b60405190808252806020026020018201604052801561038e5781602001602082028036833780820191505090505b50600090805190602001906103a492919061097e565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516103cb90610c75565b60006040518083038185875af1925050503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b5050905080610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044890610ce7565b60405180910390fd5b50565b6000818154811061046457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b1880000610509600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b190919063ffffffff16565b101561054a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054190610d53565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105fc9190610da2565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068a576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561070d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106c3575b5050505050905060005b815181101561079257600082828151811061073557610734610be6565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080600101915050610717565b50600067ffffffffffffffff8111156107ae576107ad610c15565b5b6040519080825280602002602001820160405280156107dc5781602001602082028036833780820191505090505b50600090805190602001906107f292919061097e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161083990610c75565b60006040518083038185875af1925050503d8060008114610876576040519150601f19603f3d011682016040523d82523d6000602084013e61087b565b606091505b505090508061088957600080fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000806108bd836108ed565b90506000670de0b6b3a764000085836108d69190610dd6565b6108e09190610e47565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610f05565b5050509150506402540be400816109769190610f80565b915050919050565b8280548282559060005260206000209081019282156109f7579160200282015b828111156109f65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099e565b5b509050610a049190610a08565b5090565b5b80821115610a21576000816000905550600101610a09565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a6a610a65610a6084610a25565b610a45565b610a25565b9050919050565b6000610a7c82610a4f565b9050919050565b6000610a8e82610a71565b9050919050565b610a9e81610a83565b82525050565b6000602082019050610ab96000830184610a95565b92915050565b600080fd5b6000610acf82610a25565b9050919050565b610adf81610ac4565b8114610aea57600080fd5b50565b600081359050610afc81610ad6565b92915050565b600060208284031215610b1857610b17610abf565b5b6000610b2684828501610aed565b91505092915050565b6000819050919050565b610b4281610b2f565b82525050565b6000602082019050610b5d6000830184610b39565b92915050565b610b6c81610b2f565b8114610b7757600080fd5b50565b600081359050610b8981610b63565b92915050565b600060208284031215610ba557610ba4610abf565b5b6000610bb384828501610b7a565b91505092915050565b610bc581610ac4565b82525050565b6000602082019050610be06000830184610bbc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c5f600083610c44565b9150610c6a82610c4f565b600082019050919050565b6000610c8082610c52565b9150819050919050565b600082825260208201905092915050565b7f43616c6c204661696c65642e0000000000000000000000000000000000000000600082015250565b6000610cd1600c83610c8a565b9150610cdc82610c9b565b602082019050919050565b60006020820190508181036000830152610d0081610cc4565b9050919050565b7f4469646e27742073656e7420656e6f7567682100000000000000000000000000600082015250565b6000610d3d601383610c8a565b9150610d4882610d07565b602082019050919050565b60006020820190508181036000830152610d6c81610d30565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dad82610b2f565b9150610db883610b2f565b9250828201905080821115610dd057610dcf610d73565b5b92915050565b6000610de182610b2f565b9150610dec83610b2f565b9250828202610dfa81610b2f565b91508282048414831517610e1157610e10610d73565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e5282610b2f565b9150610e5d83610b2f565b925082610e6d57610e6c610e18565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e9781610e78565b8114610ea257600080fd5b50565b600081519050610eb481610e8e565b92915050565b6000819050919050565b610ecd81610eba565b8114610ed857600080fd5b50565b600081519050610eea81610ec4565b92915050565b600081519050610eff81610b63565b92915050565b600080600080600060a08688031215610f2157610f20610abf565b5b6000610f2f88828901610ea5565b9550506020610f4088828901610edb565b9450506040610f5188828901610ef0565b9350506060610f6288828901610ef0565b9250506080610f7388828901610ea5565b9150509295509295909350565b6000610f8b82610eba565b9150610f9683610eba565b9250828202610fa481610eba565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fdc57610fdb610d73565b5b8282058414831517610ff157610ff0610d73565b5b509291505056fea26469706673582212200143270f69112215db4298ae25360c3a61db8d7b8bdef26831fa58bde2fbfa4e64736f6c63430008180033",
  "devdoc": {
    "author": "Sebastián Zeledón",
    "details": "This implements price feeds as our Library ",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our Library "
      }
    },
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this conrtract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}